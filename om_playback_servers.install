<?php
// $Id$


/**
 * @file
 * om_playback_servers Installer / Uninstaller
 */

/**
 * Implementation of hook_install().
 */
function om_playback_servers_install() {
  // Core doesn't load the .module file on install for some reason,
  // so load it here manually. 
  drupal_load('module', 'om_playback_servers');
  // Create tables.
}

/**
 * Implementation of hook_uninstall().
 */
function om_playback_servers_uninstall() {

  // Need to load the CCK include file where content_field_instance_create() is defined.
  module_load_include('inc', 'content', 'includes/content.crud');
  $results = db_query("SELECT field_name,type_name FROM {". content_instance_tablename() ."} WHERE type_name = 'om_playback_server'");
  while ($field = db_fetch_array($results)) {
    content_field_instance_delete($field['field_name'], $field['type_name'], FALSE);
  }
  // Force the caches and static arrays to update to the new info.
  content_clear_type_cache(TRUE);

  // Remove the om_playback_server node type and all associated nodes.
  $nodes = db_query(db_rewrite_sql("SELECT nid FROM {node} n WHERE type = 'om_playback_server'"));
  while ($node = db_fetch_object($nodes)) {
    node_delete($node->nid);
  }
  node_type_delete('om_playback_server');

  // You'd think the uninstall submit function would take care of this
  // but it doesn't look like it.
  node_types_rebuild();
  menu_rebuild();
  
}

/**
 * Implementation of hook_enable().
 */
function om_playback_servers_enable() {
  om_playback_servers_add_taxonomy();
  om_playback_servers_create_cck_fields();
}

function om_playback_servers_create_cck_fields() {
  watchdog('om_playback_servers', 'adding fields');
  
  // Create the date, commercial_total, and member_total fields for the reservation.
  $om_playback_server_fields = array(
  array (
    'label' => 'URI',
    'field_name' => 'field_om_playback_server_uri',
    'type_name' => 'om_playback_server',
    'locked' => '1',
    'type' => 'text',
    'widget_type' => 'text_textfield',
    'change' => 'Change basic information',
    'weight' => '5',
    'rows' => 5,
    'size' => '60',
    'description' => 'This is the URL or IP address of the server.  The playback server specific submodules are configured to use the correct port.  So if you access a Princeton using http://123.ourchannel.org:3000, you\'d enter 123.ourchannel.org.',
    'default_value' => 
    array (
      0 => 
      array (
        'value' => '',
        '_error_element' => 'default_value_widget][field_om_playback_server_uri][0][value',
      ),
    ),
    'default_value_php' => '',
    'default_value_widget' => NULL,
    'group' => false,
    'required' => 0,
    'multiple' => '0',
    'text_processing' => '0',
    'max_length' => '',
    'allowed_values' => '',
    'allowed_values_php' => '',
    'op' => 'Save field settings',
    'module' => 'text',
    'widget_module' => 'text',
    'columns' => 
    array (
      'value' => 
      array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
        'sortable' => true,
        'views' => true,
      ),
    ),
    'display_settings' => 
    array (
      'label' => 
      array (
        'format' => 'above',
        'exclude' => 1,
      ),
      5 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'teaser' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'full' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      4 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      2 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      3 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'token' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
    ),
  ),
  array (
    'label' => 'Mount',
    'field_name' => 'field_om_playback_server_mount',
    'type_name' => 'om_playback_server',
    'locked' => '1',
    'type' => 'text',
    'widget_type' => 'text_textfield',
    'change' => 'Change basic information',
    'weight' => '8',
    'rows' => 5,
    'size' => '60',
    'description' => 'These are mounted shares directly from a playback server or to another server the playback server is connected to.  Mounts are created as part of the <a href="http://www.openmediaproject.org/handbooks/video/configuration">Video Configuration</a>.',
    'default_value' => 
    array (
      0 => 
      array (
        'value' => '',
        '_error_element' => 'default_value_widget][field_om_playback_server_remote][0][value',
      ),
    ),
    'default_value_php' => '',
    'default_value_widget' => NULL,
    'group' => false,
    'required' => 0,
    'multiple' => '0',
    'text_processing' => '0',
    'max_length' => '',
    'allowed_values' => '',
    'allowed_values_php' => '',
    'op' => 'Save field settings',
    'module' => 'text',
    'widget_module' => 'text',
    'columns' => 
    array (
      'value' => 
      array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
        'sortable' => true,
        'views' => true,
      ),
    ),
    'display_settings' => 
    array (
      'label' => 
      array (
        'format' => 'above',
        'exclude' => 1,
      ),
      5 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'teaser' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'full' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      4 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      2 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      3 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'token' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
    ),
  ),
  array (
    'label' => 'Remote URI',
    'field_name' => 'field_om_playback_server_remote',
    'type_name' => 'om_playback_server',
    'locked' => '1',
    'type' => 'text',
    'widget_type' => 'text_textfield',
    'change' => 'Change basic information',
    'weight' => '8',
    'rows' => 5,
    'size' => '60',
    'description' => 'This is the URL or IP address of the remote scheduling script.',
    'default_value' => 
    array (
      0 => 
      array (
        'value' => '',
        '_error_element' => 'default_value_widget][field_om_playback_server_remote][0][value',
      ),
    ),
    'default_value_php' => '',
    'default_value_widget' => NULL,
    'group' => false,
    'required' => 0,
    'multiple' => '0',
    'text_processing' => '0',
    'max_length' => '',
    'allowed_values' => '',
    'allowed_values_php' => '',
    'op' => 'Save field settings',
    'module' => 'text',
    'widget_module' => 'text',
    'columns' => 
    array (
      'value' => 
      array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
        'sortable' => true,
        'views' => true,
      ),
    ),
    'display_settings' => 
    array (
      'label' => 
      array (
        'format' => 'above',
        'exclude' => 1,
      ),
      5 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'teaser' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'full' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      4 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      2 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      3 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'token' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
    ),
  ),
  array (
    'label' => 'Username',
    'field_name' => 'field_om_playback_server_user',
    'type_name' => 'om_playback_server',
    'locked' => '1',
    'type' => 'text',
    'widget_type' => 'text_textfield',
    'change' => 'Change basic information',
    'weight' => '6',
    'rows' => 5,
    'size' => '60',
    'description' => 'This is the username used by Drupal when communicating with the playback server. When possible, create an account specifically for this connnection.',
    'default_value' => 
    array (
      0 => 
      array (
        'value' => '',
        '_error_element' => 'default_value_widget][field_om_playback_server_user][0][value',
      ),
    ),
    'default_value_php' => '',
    'default_value_widget' => NULL,
    'group' => false,
    'required' => 0,
    'multiple' => '0',
    'text_processing' => '0',
    'max_length' => '',
    'allowed_values' => '',
    'allowed_values_php' => '',
    'op' => 'Save field settings',
    'module' => 'text',
    'widget_module' => 'text',
    'columns' => 
    array (
      'value' => 
      array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
        'sortable' => true,
        'views' => true,
      ),
    ),
    'display_settings' => 
    array (
      'label' => 
      array (
        'format' => 'above',
        'exclude' => 1,
      ),
      5 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'teaser' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'full' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      4 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      2 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      3 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'token' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
    ),
  ),
  array (
    'label' => 'Password',
    'field_name' => 'field_om_playback_server_pass',
    'type_name' => 'om_playback_server',
    'locked' => '1',
    'type' => 'text',
    'widget_type' => 'text_textfield',
    'change' => 'Change basic information',
    'weight' => '7',
    'rows' => 5,
    'size' => '60',
    'description' => 'This is the password used by Drupal when communicating with the playback server.  When possible, create an account specifically for this connnection.',
    'default_value' => 
    array (
      0 => 
      array (
        'value' => '',
        '_error_element' => 'default_value_widget][field_om_playback_server_password][0][value',
      ),
    ),
    'default_value_php' => '',
    'default_value_widget' => NULL,
    'group' => false,
    'required' => 0,
    'multiple' => '0',
    'text_processing' => '0',
    'max_length' => '',
    'allowed_values' => '',
    'allowed_values_php' => '',
    'op' => 'Save field settings',
    'module' => 'text',
    'widget_module' => 'text',
    'columns' => 
    array (
      'value' => 
      array (
        'type' => 'text',
        'size' => 'big',
        'not null' => false,
        'sortable' => true,
        'views' => true,
      ),
    ),
    'display_settings' => 
    array (
      'label' => 
      array (
        'format' => 'above',
        'exclude' => 1,
      ),
      5 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'teaser' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'full' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      4 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      2 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      3 => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
      'token' => 
      array (
        'format' => 'default',
        'exclude' => 1,
      ),
    ),
  ),
  );
  
  // Need to load the CCK include file where content_field_instance_create() is defined.
  module_load_include('inc', 'content', 'includes/content.crud');
  // Create the field.

  foreach ($om_playback_server_fields as $field) {
    
    // Create the fields
    if (!content_field_instance_read(array('field_name' => $field['field_name']), TRUE)) {
      content_field_instance_create($field, FALSE);
    }
  }
  // Clear caches and rebuild menu.
  content_clear_type_cache(TRUE);
  menu_rebuild();
}

function om_playback_servers_add_taxonomy() {

  //check for existing Channel vocabulary 
  $channels_vocabulary = om_playback_servers_get_vocabulary_by_name('Channels');
  
  $channels_nodes['om_playback_server'] = 1;
  
  if ($channels_vocabulary->vid) {
    //if it exists, add vid so existing vocabulary is updated
    
    //add existing content types the vocabulary is already associated with
    foreach ($channels_vocabulary->nodes as $node) {
      $channels_nodes[$node] = 1; 
    }
    $vocabulary = array(
      'name' => t('Channels'),
      'vid' => $channels_vocabulary->vid,
      'multiple' => 0,
      'required' => 0,
      'hierarchy' => 0,
      'relations' => 0,
      'module' => $channels_vocabulary->module,
      'weight' => -10,
      'nodes' => $channels_nodes,
    );
   }
   else { 
     //create a new Channels vocabulary
     $vocabulary = array(
       'name' => t('Channels'),
       'multiple' => 0,
       'required' => 0,
       'hierarchy' => 0,
       'relations' => 0,
       'module' => 'om_playback_server',
       'weight' => -10,
       'nodes' => $channels_nodes,
     );
   } 
   
  taxonomy_save_vocabulary($vocabulary);
  $vid = $vocabulary['vid'];
  variable_set('om_playback_servers_channels_vid', $vid);

}

